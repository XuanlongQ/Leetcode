# merge-sort.py
def merge_sort (lists):
	if len(lists) <= 1:
		return lists
	middle = len(lists)/2
	left = merge_sort(lists[:middle])
	# print left
	right = merge_sort(lists[middle:])
	return merge(left,right)
	#print right


def merge(a,b):
	c = []
	h = j =0
	while j<len(a) and h < len(b):
		if a[j] < b[h]:
			c.append(a[j])
			j+=1
		else:
			c.append(b[h])
			h+=1

	if j == len(a):
		for i in b[h:]:
			c.append(i)
	else:
		for i in a[j:]:
			c.append(i)

	return c


lists = [4, 7, 8, 3, 5, 9]

print merge_sort(lists)

http://www.cnblogs.com/chengxiao/p/6194356.html

#quick-sort.py
def quick_sort(list,low,high):
	if low < high:
		key_index = partion(list,low,high)
		quick_sort(list,low,key_index)
		quick_sort(list,key_index+1,high)
		
def partion(list,low,high):	
	key = list[low]
	while low < high:
		while low < high and list[high] >= key:
			high -=1
		if low < high:
			list[low] = list[high]

		while low < high and list[low] < key:
			low +=1
		if low < high:
			list[high] = list[low]

	list[low] = key

	return low



if __name__ == '__main__':
	list = [9,3,2,1,4,6,7,0,5]

	quick_sort(list,0,len(list)-1)
	print list
  
http://blog.csdn.net/lemon_tree12138/article/details/50622744
